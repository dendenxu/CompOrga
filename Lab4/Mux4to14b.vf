////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Mux4to14b.vf
// /___/   /\     Timestamp : 10/26/2018 00:17:28
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: D:\14.7\ISE_DS\ISE\bin\nt64\unwrapped\sch2hdl.exe -intstyle ise -family kintex7 -verilog Mux4to14b.vf -w D:/shuluozuoye/7/Mux4to1b4_sch/Mux4to14b.sch
//Design Name: Mux4to14b
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Mux4to14b(I0, 
                 I1, 
                 I2, 
                 I3, 
                 S, 
                 o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] S;
   output [3:0] o;
   
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_36;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_55;
   wire XLXN_91;
   wire XLXN_94;
   wire XLXN_97;
   wire XLXN_99;
   
   INV  XLXI_4 (.I(S[1]), 
               .O(XLXN_8));
   INV  XLXI_5 (.I(S[0]), 
               .O(XLXN_9));
   AND2  XLXI_6 (.I0(XLXN_8), 
                .I1(XLXN_9), 
                .O(XLXN_91));
   AND2  XLXI_7 (.I0(XLXN_8), 
                .I1(S[0]), 
                .O(XLXN_94));
   AND2  XLXI_8 (.I0(XLXN_9), 
                .I1(S[1]), 
                .O(XLXN_97));
   AND2  XLXI_9 (.I0(S[0]), 
                .I1(S[1]), 
                .O(XLXN_99));
   AND2  XLXI_10 (.I0(XLXN_91), 
                 .I1(I0[0]), 
                 .O(XLXN_28));
   AND2  XLXI_11 (.I0(XLXN_94), 
                 .I1(I1[0]), 
                 .O(XLXN_29));
   AND2  XLXI_12 (.I0(XLXN_97), 
                 .I1(I2[0]), 
                 .O(XLXN_30));
   AND2  XLXI_13 (.I0(XLXN_99), 
                 .I1(I3[0]), 
                 .O(XLXN_31));
   OR4  XLXI_48 (.I0(XLXN_28), 
                .I1(XLXN_29), 
                .I2(XLXN_30), 
                .I3(XLXN_31), 
                .O(o[0]));
   AND2  XLXI_49 (.I0(XLXN_91), 
                 .I1(I0[1]), 
                 .O(XLXN_36));
   AND2  XLXI_50 (.I0(XLXN_94), 
                 .I1(I1[1]), 
                 .O(XLXN_37));
   AND2  XLXI_51 (.I0(XLXN_97), 
                 .I1(I2[1]), 
                 .O(XLXN_38));
   AND2  XLXI_52 (.I0(XLXN_99), 
                 .I1(I3[1]), 
                 .O(XLXN_39));
   OR4  XLXI_57 (.I0(XLXN_36), 
                .I1(XLXN_37), 
                .I2(XLXN_38), 
                .I3(XLXN_39), 
                .O(o[1]));
   AND2  XLXI_58 (.I0(XLXN_91), 
                 .I1(I0[2]), 
                 .O(XLXN_44));
   AND2  XLXI_59 (.I0(XLXN_94), 
                 .I1(I1[2]), 
                 .O(XLXN_45));
   AND2  XLXI_60 (.I0(XLXN_97), 
                 .I1(I2[2]), 
                 .O(XLXN_46));
   AND2  XLXI_61 (.I0(XLXN_99), 
                 .I1(I3[2]), 
                 .O(XLXN_47));
   OR4  XLXI_66 (.I0(XLXN_44), 
                .I1(XLXN_45), 
                .I2(XLXN_46), 
                .I3(XLXN_47), 
                .O(o[2]));
   AND2  XLXI_67 (.I0(XLXN_91), 
                 .I1(I0[3]), 
                 .O(XLXN_52));
   AND2  XLXI_68 (.I0(XLXN_94), 
                 .I1(I1[3]), 
                 .O(XLXN_53));
   AND2  XLXI_69 (.I0(XLXN_97), 
                 .I1(I2[3]), 
                 .O(XLXN_54));
   AND2  XLXI_70 (.I0(XLXN_99), 
                 .I1(I3[3]), 
                 .O(XLXN_55));
   OR4  XLXI_75 (.I0(XLXN_52), 
                .I1(XLXN_53), 
                .I2(XLXN_54), 
                .I3(XLXN_55), 
                .O(o[3]));
endmodule
